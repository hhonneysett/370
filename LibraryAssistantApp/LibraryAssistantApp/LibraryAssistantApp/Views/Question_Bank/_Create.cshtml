@model LibraryAssistantApp.Models.Question_Bank


<h4 class="bg-info shaded">Answer Type</h4>
<div class="row" style="padding-top:15px">
    <div class="form-horizontal">
        <ul style="padding-bottom:15px;">
            <li>
                <p>Style type represents the way in which your question will be displayed.</p>
            </li>
            <li>
                <p>Each type will provide a different format for answering the question eg. radio buttons.</p>
            </li>
        </ul>
        <div class="form-group">
            @Html.LabelFor(model => model.Style_Type_ID, "Style Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Style_Type_ID", null, "Select a style type", htmlAttributes: new { @class = "form-control", @onchange = "CallChangefunc(this.value)", id = "Style_Type_ID" })
                @*@Html.DropDownList("Style_Type_ID", new SelectList(ViewBag.Style_Type_ID), "Select a style type", new { onchange = "form.submit" })*@
                <label class="text-danger" id="Error_Style_Type_ID"></label>
                @*@Html.ValidationMessageFor(model => model.Style_Type_ID, "", new { @class = "text-danger" , id = "Error_Style_Type_ID" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Description", "Description", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @if (ViewBag.Image != null)
                {
                    @Html.TextArea("Description", htmlAttributes: new { @class = "form-control", id = "StyleType_D", @readonly = true, @Value = (string)ViewBag.Description, rows = "6" })
                }
                else
                {
                    @Html.TextArea("No", "No style type selected.", htmlAttributes: new { @class = "form-control", id = "StyleType_D", @readonly = true })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Style_Type_ID, "Preview", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*To display the image*@
                @if (ViewBag.Image != null)
                {
                    var base64 = Convert.ToBase64String(ViewBag.Image);
                    var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                    <img src='@imgSrc' style="max-width:400px; max-height:400px; border:1px solid black;" />
                }
                else
                {
                    <p>No style selected.</p>
                }
            </div>
        </div>
        <ul style="padding-bottom:15px; padding-top:15px">
            <li>
                <p>If the style 'Free Text' has been selected, click the 'Save Question' button.</p>
            </li>
            <li>
                <p>If any other style has been selected, click the 'Add Answers' to proceed with adding possible answers.</p>
            </li>
        </ul>
        @if (ViewBag.NewTopic == "YES")
        {
            if (ViewBag.Style_Type_IDName == "Free Text")
            {

                <div class="form-group">
                    <div class="col-md-10 col-md-offset-2">
                        <div class="btn-group">
                            <input type="submit" value="Save Question" class="btn btn-primary" onclick="EnableDropDown(); validateInput()" />
                        </div>
                        <div class="btn-group">
                            <input type="button" value="Back" class="btn btn-primary" onclick="location.href='@Url.Action("Create_Back_From_Create_Question", "Question_Topic", new {ViewBag.Topic_Name, ViewBag.Topic_Des })'" />
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="form-group">
                    <div class="col-md-10 col-md-offset-2">
                        <div class="btn-group">
                            <input type="submit" value="Add Answers" class="btn btn-primary" onclick="EnableDropDown(); validateInput()" />
                        </div>
                        <div class="btn-group">
                            <input type="button" value="Back" class="btn btn-primary" onclick="location.href='@Url.Action("Create_Back_From_Create_Question", "Question_Topic", new {ViewBag.Topic_Name, ViewBag.Topic_Des })'" />
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            if (ViewBag.Style_Type_IDName == "Free Text")
            {

                <div class="form-group">
                    <div class="col-md-10 col-md-offset-2">
                        <input data-toggle="tooltip" data-placement="right" title="Finish creating the new question." type="submit" value="Save Question" class="btn btn-primary" onclick="EnableDropDown(); validateInput()" />
                    </div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
            }
            else
            {
                <div class="form-group">
                    <div class="col-md-10 col-md-offset-2">
                        <input data-toggle="tooltip" data-placement="right" title="Add possible answers to the question." type="submit" value="Add Answers" class="btn btn-primary" onclick="EnableDropDown(); validateInput()" />
                    </div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
            }
        }
    </div>
</div>

<script>
    jQuery(document).ready(function ($) {

        if (window.history && window.history.pushState) {

            $(window).on('popstate', function () {
                var hashLocation = location.hash;
                var hashSplit = hashLocation.split("#!/");
                var hashName = hashSplit[1];

                if (hashName !== '') {
                    var hash = window.location.hash;
                    if (hash === '') {
                        //Your code
                       
                        var Topic_Name = document.getElementById("Topic_Name").value;
                        var Topic_Des = document.getElementById("Topic_Des").value;
                        var NewTopic = document.getElementById("NewTopic").value;

                        if (NewTopic == "YES") {
                            window.location.href = "/Question_Topic/Create_Back_From_Create_Question?Topic_Name=" + Topic_Name + "&Topic_Des=" + Topic_Des;
                        }
                        else {
                            window.location.href = "/Question_Bank/Index?";
                        }

                      

                    }
                }
            });

            window.history.pushState('forward', null, './#forward');
        }

    });

</script>

<script>
    function CallChangefunc(val) {
        var Question_Text = document.getElementById("Question_TextBox").value;
        var Topic_Seq = document.getElementById("Topic_Dropdownlist").value;
        var NewTopic = document.getElementById("NewTopic").value;
        var Topic_Name = document.getElementById("Topic_Name").value;
        var Topic_Des = document.getElementById("Topic_Des").value;
        window.location.href = "/Question_Bank/GetDescription?Style_Type_ID=" + val + "&Question_Text=" + Question_Text + "&Topic_Seq=" + Topic_Seq + "&NewTopic=" + NewTopic + "&Topic_Name=" + Topic_Name + "&Topic_Des=" + Topic_Des;
    }
</script>


<script>
$(document).ready(function(){
    $('[data-toggle="tooltip"]').tooltip();
});
</script>