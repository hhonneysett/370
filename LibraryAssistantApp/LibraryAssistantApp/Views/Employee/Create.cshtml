@using LibraryAssistantApp.Models
@model LibraryAssistantApp.Models.EmployeeAddModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

@{
    var catlist = (IEnumerable<Category>)TempData["_Categories"];
}

<h3>Create Employee</h3>
<hr />
<h5>New Employee Details:</h5>
<br />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="col-md-12">
            <div class="form-group">
                @Html.LabelFor(model => model.person_id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.person_id, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.person_id, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-md-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.person_name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.person_name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.person_name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.person_surname, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.person_surname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.person_surname, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.person_email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.person_email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.person_email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group" hidden>
                    @Html.LabelFor(model => model.Person_Type, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Person_Type", null, htmlAttributes: new { @class = "form-control", @Disabled = true })
                        @Html.Hidden("Person_Type", 2)
                        @Html.ValidationMessageFor(model => model.Person_Type, "", new { @class = "text-danger" })
                    </div>
                </div>
        </div>

        <h5>Employee Roles:</h5>
        <br />
        <div class="row">
            <div class="col-md-4 col-md-offset-2">
                <div id="emp-deets" class="panel panel-default">
                    @if (ViewBag.Check1 == true)
                {
                        <table id="tbl-roles" class="table">
                            <thead>
                                <tr>
                                    <th>
                                        Role
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.role.Count(); i++)
                                {
                                    <tr id="@Model.role[i].Role_ID">
                                        @Html.HiddenFor(x => x.role_check[i].role_id)
                                        <td>
                                            @Html.DisplayFor(x => x.role[i].Role_Name)
                                        </td>
                                        <td>
                                            @Html.CheckBoxFor(x => x.role_check[i].role_ind, htmlAttributes: new { @onclick = "myFunction(this)", @id = Model.role[i].Role_ID, @class = @Model.role_check[i].role_id })
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                </div>
            </div>
        </div>

        <div id="topic-parent" hidden>
            <h5>Trainer Topics:</h5>
            <br/>        
            <div id="div-topics">

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="btn-create" type="submit" value="Create" formmethod="post" formaction="Create" class="btn btn-default" />
            </div>
            <div class="loading"><img src="~/gif/rolling-sm-dark.gif" /></div>
        </div>
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
}

@section script {
    <script type="text/javascript">

        $(document).ready(function () {
            $('#tbl-roles tbody tr').click(function () {
                $('#tbl-roles tr').removeClass('selectedrow');
                $(this).addClass('selectedrow');
                var a = $(this).attr('id');
                if (a == 7) {
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("Topics", "Employee")',
                        success: function (result) {
                            $('#div-topics').html(result);
                        }
                    }) 
                }
            });
        });
        function myFunction (e) {
            if ($(e).attr('id') == 7)
            {
                $('#topic-parent').toggle();
            }
        }

        
        @*$('#btn-submit-1').click(function () {
            var a = $('#person_id').val();
            var e = $('#person_email').val();
            if (e = undefined) { e = "" };
            $.ajax({
                type: 'GET',
                data: { id: a , person_email : e },
                url: '@Url.Action("Create", "Employee")',
                beforeSend: function () {
                    $('.loading').show();
                },
                success: function (result) {
                    $('#emp-form').html(result);
                }
            }).done(function () {
                $('.loading').hide();
            });
        });*@

        @*jQuery.validator.addMethod("validateEmp", function (value, element) {
            $.ajax({
                type: 'GET',
                url: "/Employee/validateEmp",
                data: { id: value },
                beforeSend: function () {
                    $('.loading').show();
                },
                success: function (result) {
                    if (result == "True")
                    {
                        return this.optional(element) || true;
                    }
                    else return this.optional(element) || false;
                }
            }).done(function () {
                $('.loading').hide();
            })
        }, "Person Exists");

        $("#empCreateForm").validate({
            rules: {
                person_id: {required: true, validateEmp: true}
            }
        })

        $("#btn-submit-1").click(function () {
            var id = $("#person_id").val();
        })

        $("#btn-submit-1").click(function () {
            if ($("#empCreateForm").valid()) {
                alert("VALID FORM")
            }
        })*@
    </script>
}
