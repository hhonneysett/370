@model LibraryAssistantApp.Models.UpdateFileModel

@{
    ViewBag.Title = "Update File";
}

<h2>Update File</h2>

@using (Html.BeginForm("UpdateFile", "Repository", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4 class="bg-info shaded">Provide updated file details below:</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.Document_Seq)
        <div class="form-group">
            @Html.LabelFor(model => model.Document_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Document_Name, new { htmlAttributes = new { @class = "form-control", @title = "Enter file name." } })
                @Html.ValidationMessageFor(model => model.Document_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @title = "Enter file description." } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category_ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Category_ID", null, htmlAttributes: new { @class = "form-control", @title = "Select file category." })
                @Html.ValidationMessageFor(model => model.Category_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Document_Type_ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Document_Type_ID", null, htmlAttributes: new { @class = "form-control", @title = "Select file type." })
                @Html.ValidationMessageFor(model => model.Document_Type_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.uploadFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="uploadFile" title="Select file to upload."/>
                @Html.ValidationMessageFor(model => model.uploadFile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Back", "ViewFile", "Repository", htmlAttributes: new { @class = "btn btn-primary" })
                <input type="submit" value="Save Changes" class="btn btn-primary" title="Save changes to the selected file."/>
            </div>
        </div>
    </div>
}
