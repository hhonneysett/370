
@{
    ViewBag.Title = "View Bookings";
}

<h2>View Bookings</h2>
<h4 class="bg-info shaded">Provide details below to view bookings:</h4>

<div class="row">
    <div class="col-md-6">
        <h4 class="bg-warning shaded">Bookings For Person:</h4>
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="form-group">
                    <strong>
                        Username:
                    </strong>
                </div> 
                <div class="form-group">
                    <input type="text" id="personIdInput" placeholder="Enter username" class="form-control" title="Enter valid username."/>
                </div>              
            </div>
            <div class="panel-footer">
                <input type="submit" id="btnPersonId" class="btn btn-primary" disabled="disabled" value="Submit" title="Filter bookings by username."/>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <h4 class="bg-warning shaded">Bookings For Venue:</h4>
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="form-group col-md-3">
                    <label>Campus:</label>
                    <select class="form-control" id="campusSelectList" title="Select campus to show matching buildings.">
                        <option disabled selected value> -- select a campus -- </option>
                        @foreach(var campus in (SelectList)ViewBag.Campus_ID)
                        {
                            <option id="@campus.Value">@campus.Text</option>
                        }
                    </select>
                </div>
                <div class="form-group col-md-3">
                    <label>Building:</label>
                    <select class="form-control" id="buildingSelectList" disabled="disabled" title="Select building to show matching floors.">
                    </select>
                </div>
                <div class="form-group col-md-3">
                    <label>Floor:</label>
                    <select class="form-control" disabled="disabled" id="levelSelectList" title="Select floor to show matching venues.">
                    </select>
                </div>
                <div class="form-group col-md-3">
                    <label>Venue:</label>
                    <select class="form-control" disabled="disabled" id="venueSelectList" title="Select venue to filter by.">
                    </select>
                </div>
            </div>
            <div class="panel-footer">
                <button type="button" class="btn btn-primary" id="btnVenueSubmit" disabled="disabled" title="Filter bookings by venue.">Submit</button>
            </div>
        </div>
    </div>
</div>
<div class="row" id="empcalendar" hidden>
    <div class="col-md-12">
        <h4 class="bg-success shaded">Bookings Calendar View:</h4>
        <div class="panel panel-default" id="container" hidden>
            <div class="panel-body">
                <div id="scheduler_here" class="dhx_cal_container" style='width:100%; height:55em; display:none'>
                    <div class="dhx_cal_navline">
                        <div class="dhx_cal_prev_button">&nbsp;</div>
                        <div class="dhx_cal_next_button">&nbsp;</div>
                        <div class="dhx_cal_today_button"></div>
                        <div class="dhx_cal_date"></div>
                        <div class="dhx_cal_tab" name="day_tab" style="right:204px;"></div>
                        <div class="dhx_cal_tab" name="week_tab" style="right:140px;"></div>
                        <div class="dhx_cal_tab" name="month_tab" style="right:76px;"></div>
                        <div class="dhx_cal_tab" name="agenda_tab" style="right:280px;"></div>
                    </div>
                    <div class="dhx_cal_header"></div>
                    <div class="dhx_cal_data"></div>
                </div>
            </div>
        </div>
    </div>
</div>


<div id="bookingDetailsForm"></div>

@section script{
    <script type="text/javascript">

        //populate the buildings combo box with buildings relating to the selected campus
        $("#campusSelectList").change(function () {
            //get the id of the selected campus
            var id = $(this).children(":selected").attr("id");

            //run ajax request to get all buildings for the selected campus
            $.ajax({
                type: 'GET',
                url: '/Booking/getBuildingsList',
                data: "id=" + id,
                success: function (result) {
                    var options = $("#buildingSelectList");

                    //disable submit button when no selection
                    var button = $("#btnVenueSubmit");
                    button.prop('disabled', true);

                    //remove existing options from the select to add new options
                    options.children().remove();

                    //add blank option
                    options.append($("<option disabled selected value />").text("-- select a building --"));

                    //add an option to the select for each building
                    result.forEach(function (entry) {
                        options.append($("<option />").val(entry.id).text(entry.text));
                    });
                    options.prop('disabled', false)
                    var level = $("#levelSelectList");
                    level.prop('disabled', true)
                    level.children().remove();
                    var venue = $("#venueSelectList");
                    venue.prop('disabled', true);
                    venue.children().remove();
                },
                error: function (err, result) {
                    alert("Error:" + err.responseText);
                }
            });
        });

        //populate the level combo box with buildings relating to the selected campus
        $("#buildingSelectList").change(function () {
            //get the id of the selected campus
            var id = $(this).children(":selected").attr("value");

            //run ajax request to get all buildings for the selected campus
            $.ajax({
                type: 'GET',
                url: '/Booking/getLevelList',
                data: "id=" + id,
                success: function (result) {
                    var options = $("#levelSelectList");

                    //disable submit button when no selection
                    var button = $("#btnVenueSubmit");
                    button.prop('disabled', true);

                    //remove existing options from the select to add new options
                    options.children().remove();

                    //add blank option
                    options.append($("<option disabled selected value />").text("-- select a level --"));

                    //add an option to the select for each building
                    result.forEach(function (entry) {
                        options.append($("<option />").val(entry.id).text('Floor ' + entry.text));
                    });
                    options.prop('disabled', false)
                    var venue = $("#venueSelectList");
                    venue.prop('disabled', true)
                    venue.children().remove();
                },
                error: function (err, result) {
                    alert("Error:" + err.responseText);
                }
            });
        });

        //populate the venue combo box with buildings relating to the selected campus
        $("#levelSelectList").change(function () {
            //get the id of the selected campus
            var id = $(this).children(":selected").attr("value");

            //run ajax request to get all buildings for the selected campus
            $.ajax({
                type: 'GET',
                url: '/Booking/getVenueList',
                data: "id=" + id,
                success: function (result) {
                    var options = $("#venueSelectList");

                    //disable submit button when no selection
                    var button = $("#btnVenueSubmit");
                    button.prop('disabled', true);

                    //remove existing options from the select to add new options
                    options.children().remove();

                    //add blank option
                    options.append($("<option disabled selected value />").text("-- select a venue --"));

                    //add an option to the select for each building
                    result.forEach(function (entry) {
                        options.append($("<option />").val(entry.id).text(entry.text));
                    });
                    options.prop('disabled', false)
                },
                error: function (err, result) {
                    alert("Error:" + err.responseText);
                }
            });
        });

        //populate the venue combo box with buildings relating to the selected campus
        $("#venueSelectList").change(function () {
            var button = $("#btnVenueSubmit");
            button.prop('disabled', false);
        });

        //disable person id input if no text
        $(document).ready(function () {
            $("#personIdInput").keyup(function () {
                if ($("#personIdInput").val().length > 0) {
                    $("#btnPersonId").removeAttr('disabled');
                }
            });
            $("#personIdInput").blur(function () {
                if ($("#personIdInput").val().replace(/\s{1,}/g, "").length == 0) {
                    $("#btnPersonId").attr('disabled', 'disabled');
                }
            });
        });

        //show calendar on button click
        $("#btnPersonId").click(function() {
            var personID = $('#personIdInput').val();
            displayCalendar(personID, "personID");
        });

        //show calendar on button click
        $("#btnVenueSubmit").click(function () {
            var id = $("#venueSelectList").children(":selected").attr("value");
            displayCalendar(id, "venueID");
        });

        //load calendar
        function displayCalendar(inputId, inputType) {
            $("#container").show();
            $.ajax({
                type: 'GET',
                url: '/Booking/getEmpBookings',
                data: {
                    id: inputId,
                    idType: inputType
                },
                success: function (result) {
                    scheduler.clearAll();
                    $("#scheduler_here").show();
                    $("#empcalendar").show();
                    window.location.hash = '#empcalendar';

                    //configuration for the scheduler
                    scheduler.config.resize_month_events = false;
                    scheduler.config.first_hour = 8;
                    scheduler.config.last_hour = 17;
                    scheduler.config.start_on_monday = true;
                    scheduler.locale.labels.agenda_tab = "Agenda";
                    scheduler.config.readonly = true;


                    //initialize the scheduler
                    scheduler.init('scheduler_here', new Date(), "month");

                    //create an events json object
                    var events = [];

                    //go through list of events and add each event to the json events object
                    result.forEach(function (entry) {
                        var event = {
                            id: entry.id,
                            text: entry.text,
                            start_date: moment(entry.start_date).format('MM[/]DD[/]YYYY h:mm:ss'),
                            end_date: moment(entry.end_date).format('MM[/]DD[/]YYYY h:mm:ss'),
                        }

                        //adds the event to the events object
                        events.push(event);
                    });

                    //passes the events to the scheduler
                    scheduler.parse(events, "json"); //takes the name and format of the data source

                    scheduler.attachEvent("onClick", function (id, e) {
                        //any custom logic here
                        $("#bookingDetailsForm").dialog({
                            autoOpen: true,
                            position: {
                                my: "center",
                                at: "top+350",
                                of: window
                            },
                            width: 1000,
                            resizable: false,
                            title: 'Booking Details',
                            modal: true,
                            open: function () {
                                $(this).load('/Booking/getEmpBookingDetails/?id=' + id);
                            },
                            buttons: {
                                "Update Booking Status": {
                                    click: function () {
                                        var selectList = $("#bookingStatusList").val();
                                        $.ajax({
                                            type: 'GET',
                                            url: '/Booking/updateStatus',
                                            data: "status=" + selectList,
                                            success: function (result) {
                                                $("#bookingDetailsForm").dialog("close");
                                                displayCalendar(inputId, inputType);
                                            },
                                            error: function (err, result) {
                                                alert("Error in assigning dataToSave" + err.responseText);
                                            }
                                        });
                                    },
                                    text: "Update Booking Status",
                                    id: "btUpdateStatus",
                                    disabled: "disabled",
                                },
                                "Update Booking": {
                                    text: "Update Booking",
                                    id: "btnUpdateBooking",
                                    click: function () {
                                        location = "/Booking/updateBookingDetails";
                                    }
                                },
                                Cancel: function () {
                                    $(this).dialog("close");
                                },
                            }
                        });
                    });

                    $.ambiance({
                        message: "Bookings loaded!",
                        title: "Success!",
                        type: "success",
                        timeout: 5
                    });
                },
                error: function (err, result) {
                    alert("Error in assigning dataToSave" + err.responseText);
                }
            });
            scheduler.updateView();
        };

        //enable button on employeeViewBookings when status is updated
        function enableButton() {
            var button = $("#btUpdateStatus");
            button.prop("disabled", false);
            button.removeClass("ui-button-disabled");
            button.removeClass("ui-state-disabled");
        };

    </script>    
}