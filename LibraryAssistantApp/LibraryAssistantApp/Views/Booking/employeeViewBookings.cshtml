
@{
    ViewBag.Title = "ViewBookings";
    Layout = (string)Session["layout"];
}

<h2>View Bookings</h2>

<div class="row">
    <div class="col-md-6">
        <div class="panel panel-default">
            <div class="panel-heading">
                Bookings For Person:
            </div>
            <div class="panel-body">
                <div class="form-group">
                    <strong>
                        Person ID:
                    </strong>
                </div> 
                <div class="form-group">
                    <input type="text" id="personIdInput" placeholder="Enter Person ID" class="form-control" />
                </div>              
            </div>
            <div class="panel-footer">
                <input type="submit" id="btnPersonId" class="btn btn-default" disabled="disabled" value="Submit"/>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="panel panel-default">
            <div class="panel-heading">
                Bookings For Venue:
            </div>
            <div class="panel-body">
                <div class="form-group col-md-3">
                    <label>Campus:</label>
                    <select class="form-control" id="campusSelectList">
                        <option disabled selected value> -- select a campus -- </option>
                        @foreach(var campus in (SelectList)ViewBag.Campus_ID)
                        {
                            <option id="@campus.Value">@campus.Text</option>
                        }
                    </select>
                </div>
                <div class="form-group col-md-3">
                    <label>Building:</label>
                    <select class="form-control" id="buildingSelectList" disabled="disabled">
                    </select>
                </div>
                <div class="form-group col-md-3">
                    <label>Level:</label>
                    <select class="form-control" disabled="disabled" id="levelSelectList">
                    </select>
                </div>
                <div class="form-group col-md-3">
                    <label>Venue:</label>
                    <select class="form-control" disabled="disabled" id="venueSelectList">
                    </select>
                </div>
            </div>
            <div class="panel-footer">
                <button type="button" class="btn btn-default" id="btnVenueSubmit" disabled="disabled">Submit</button>
            </div>
        </div>
    </div>
</div>
<hr />
<div id="scheduler_here" class="dhx_cal_container" style='width:1000px; height:600px; display:none'>
    <div class="dhx_cal_navline">
        <div class="dhx_cal_prev_button">&nbsp;</div>
        <div class="dhx_cal_next_button">&nbsp;</div>
        <div class="dhx_cal_today_button"></div>
        <div class="dhx_cal_date"></div>
        <div class="dhx_cal_tab" name="day_tab" style="right:204px;"></div>
        <div class="dhx_cal_tab" name="week_tab" style="right:140px;"></div>
        <div class="dhx_cal_tab" name="month_tab" style="right:76px;"></div>
        <div class="dhx_cal_tab" name="agenda_tab" style="right:280px;"></div>
    </div>
    <div class="dhx_cal_header"></div>
    <div class="dhx_cal_data"></div>
</div>

<div id="bookingDetailsForm"></div>

@section script{
    <script type="text/javascript">

        //populate the buildings combo box with buildings relating to the selected campus
        $("#campusSelectList").change(function () {
            //get the id of the selected campus
            var id = $(this).children(":selected").attr("id");

            //run ajax request to get all buildings for the selected campus
            $.ajax({
                type: 'GET',
                url: '/Booking/getBuildingsList',
                data: "id=" + id,
                success: function (result) {
                    var options = $("#buildingSelectList");

                    //disable submit button when no selection
                    var button = $("#btnVenueSubmit");
                    button.prop('disabled', true);

                    //remove existing options from the select to add new options
                    options.children().remove();

                    //add blank option
                    options.append($("<option disabled selected value />").text("-- select a building --"));

                    //add an option to the select for each building
                    result.forEach(function (entry) {
                        options.append($("<option />").val(entry.id).text(entry.text));
                    });
                    options.prop('disabled', false)
                    var level = $("#levelSelectList");
                    level.prop('disabled', true)
                    level.children().remove();
                    var venue = $("#venueSelectList");
                    venue.prop('disabled', true);
                    venue.children().remove();
                },
                error: function (err, result) {
                    alert("Error:" + err.responseText);
                }
            });
        });

        //populate the level combo box with buildings relating to the selected campus
        $("#buildingSelectList").change(function () {
            //get the id of the selected campus
            var id = $(this).children(":selected").attr("value");

            //run ajax request to get all buildings for the selected campus
            $.ajax({
                type: 'GET',
                url: '/Booking/getLevelList',
                data: "id=" + id,
                success: function (result) {
                    var options = $("#levelSelectList");

                    //disable submit button when no selection
                    var button = $("#btnVenueSubmit");
                    button.prop('disabled', true);

                    //remove existing options from the select to add new options
                    options.children().remove();

                    //add blank option
                    options.append($("<option disabled selected value />").text("-- select a level --"));

                    //add an option to the select for each building
                    result.forEach(function (entry) {
                        options.append($("<option />").val(entry.id).text('Floor ' + entry.text));
                    });
                    options.prop('disabled', false)
                    var venue = $("#venueSelectList");
                    venue.prop('disabled', true)
                    venue.children().remove();
                },
                error: function (err, result) {
                    alert("Error:" + err.responseText);
                }
            });
        });

        //populate the venue combo box with buildings relating to the selected campus
        $("#levelSelectList").change(function () {
            //get the id of the selected campus
            var id = $(this).children(":selected").attr("value");

            //run ajax request to get all buildings for the selected campus
            $.ajax({
                type: 'GET',
                url: '/Booking/getVenueList',
                data: "id=" + id,
                success: function (result) {
                    var options = $("#venueSelectList");

                    //disable submit button when no selection
                    var button = $("#btnVenueSubmit");
                    button.prop('disabled', true);

                    //remove existing options from the select to add new options
                    options.children().remove();

                    //add blank option
                    options.append($("<option disabled selected value />").text("-- select a venue --"));

                    //add an option to the select for each building
                    result.forEach(function (entry) {
                        options.append($("<option />").val(entry.id).text(entry.text));
                    });
                    options.prop('disabled', false)
                },
                error: function (err, result) {
                    alert("Error:" + err.responseText);
                }
            });
        });

        //populate the venue combo box with buildings relating to the selected campus
        $("#venueSelectList").change(function () {
            var button = $("#btnVenueSubmit");
            button.prop('disabled', false);
        });

        //disable person id input if no text
        $(document).ready(function () {
            $("#personIdInput").keyup(function () {
                if ($("#personIdInput").val().length > 0) {
                    $("#btnPersonId").removeAttr('disabled');
                }
            });
            $("#personIdInput").blur(function () {
                if ($("#personIdInput").val().replace(/\s{1,}/g, "").length == 0) {
                    $("#btnPersonId").attr('disabled', 'disabled');
                }
            });
        });

        //show calendar on button click
        $("#btnPersonId").click(function() {
            var personID = $('#personIdInput').val();
            displayCalendar(personID, "personID");
        });

        //show calendar on button click
        $("#btnVenueSubmit").click(function () {
            var id = $("#venueSelectList").children(":selected").attr("value");
            displayCalendar(id, "venueID");
        });       
    </script>    
}