@using LibraryAssistantApp.Models
@model LibraryAssistantApp.Models.UpdateBookingModel

@{
    ViewBag.Title = "updateBookingDetails";
    var bookingDetails = (BookingDetailsModel)Session["selectedBookingDetails"];
}

<h2>Update Booking</h2>

    @Html.AntiForgeryToken()

<form id="updateDetailsForm">
    <h4>Please provide updated booking details:</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control", @id = "datepicker", @placeholder = "Select Date" } })
            @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.time, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.time, new { htmlAttributes = new { @class = "form-control timepicker", @id = "timepicker" } })
            @Html.ValidationMessageFor(model => model.time, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.length, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="length" id="length" class="form-control" Value="@Model.length">
                <option>30</option>
                <option>60</option>
                <option>90</option>
            </select>
            @Html.ValidationMessageFor(model => model.length, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.campus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="campus" id="campus" class="form-control">
                @foreach (var item in (IEnumerable<Campus>)ViewBag.Campus)
                {
                    <option id="@item.Campus_ID">@item.Campus_Name</option>
                }
            </select>
            @Html.ValidationMessageFor(model => model.campus, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.building, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="building" id="building" class="form-control">
                @foreach (var building in (IEnumerable<Building>)ViewBag.Building)
                {
                    <option id="@building.Building_ID">@building.Building_Name</option>
                }
            </select>
            @Html.ValidationMessageFor(model => model.building, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.venue, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="venue" id="venue" class="form-control">
                @foreach (var venue in (IEnumerable<Venue>)ViewBag.Venue)
                {
                    <option id="@venue.Venue_ID">@venue.Venue_Name</option>
                }
            </select>
            @Html.ValidationMessageFor(model => model.venue, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="button" value="Save" class="btn btn-default" id="btnUpdateBooking" />
        </div>
    </div>
</form>
       

@section script{
    <script type="text/javascript">
        $(document).ready(function () {

            //set length select list default
            var length = document.getElementById('length');
            length.value = @Model.length;

            //set campus select list default
            var campus = document.getElementById('campus');
            campus.value = '@Model.campus';

            //set building select list default
            var building = document.getElementById('building');
            building.value = '@Model.building';

            //set venue select list default
            var venue = document.getElementById('venue');
            venue.value = '@Model.venue';

            //get list of buildings matching selected campus
            $("#campus").change(function ()
            {
                var id = $(this).children(":selected").attr("id");

                //run ajax request to get all buildings for the selected campus
                $.ajax({
                    type: 'GET',
                    url: '/Booking/getBuildingsList',
                    data: "id=" + id,
                    success: function (result) {
                        var options = $("#building");

                        //remove existing options from the select to add new options
                        options.children().remove();

                        //add blank option
                        options.append($("<option disabled selected value />").text("-- select a building --"));

                        //add an option to the select for each building
                        result.forEach(function (entry) {
                            options.append($("<option />").attr('id', entry.id).text(entry.text));
                        });
                        options.prop('disabled', false)

                        var venue = $("#venue");
                        venue.prop('disabled', true);
                        venue.children().remove();
                    },
                    error: function (err, result) {
                        alert("Error:" + err.responseText);
                    }
                });
                var x = document.getElementsByClassName("btn-default");
                x.prop("disabled", true);
            });

            //get list of venues matching selected building
            $("#building").change(function ()
            {
                var buildingID = $(this).children(":selected").attr("id");
                var startDate = $("#datepicker").val();
                var campusID = $("#campus").children(":selected").attr("id");
                var time = $("#timepicker").val();
                var length = $("#length").children(":selected").val();

                //run ajax request to get all buildings for the selected campus
                $.ajax({
                    type: 'GET',
                    url: '/Booking/getUpdateVenues',
                    data: {start: startDate, time: time, building: buildingID, campus: campusID, length: length},
                    success: function (result) {
                        var options = $("#venue");

                        //remove existing options from the select to add new options
                        options.children().remove();

                        //add blank option
                        options.append($("<option disabled selected value />").text("-- select a building --"));

                        //add an option to the select for each building
                        result.forEach(function (entry) {
                            options.append($("<option />").attr('id', entry.id).text(entry.text));
                        });
                        options.prop('disabled', false)
                    },
                    error: function (err, result) {
                        alert("Error:" + err.responseText);
                    }
                });
                $("#btnSubmit").prop("disabled", true);
            });

            //remove options and disable selects for calendar change
            $("#datepicker").change(function () {
                var venue = $("#venue");
                venue.prop('disabled', true);
                venue.children().remove();

                var building = $("#building");
                building.prop('disabled', true);
                building.children().remove();

                var id = $("#campus").children(":selected").attr("id");

                $.ajax({
                    type: 'GET',
                    url: '/Booking/getBuildingsList',
                    data: "id=" + id,
                    success: function (result) {
                        var options = $("#building");

                        //remove existing options from the select to add new options
                        options.children().remove();

                        //add blank option
                        options.append($("<option disabled selected value />").text("-- select a building --"));

                        //add an option to the select for each building
                        result.forEach(function (entry) {
                            options.append($("<option />").attr('id', entry.id).text(entry.text));
                        });
                        options.prop('disabled', false)

                        var venue = $("#venue");
                        venue.prop('disabled', true);
                        venue.children().remove();
                    },
                    error: function (err, result) {
                        alert("Error:" + err.responseText);
                    }
                });
                $("#btnSubmit").prop("disabled", true);
            });

            //remove options and disable selects for time change
            $("#timepicker").change(function () {
                var venue = $("#venue");
                venue.prop('disabled', true);
                venue.children().remove();

                var building = $("#building");
                building.prop('disabled', true);
                building.children().remove();

                var id = $("#campus").children(":selected").attr("id");

                $.ajax({
                    type: 'GET',
                    url: '/Booking/getBuildingsList',
                    data: "id=" + id,
                    success: function (result) {
                        var options = $("#building");

                        //remove existing options from the select to add new options
                        options.children().remove();

                        //add blank option
                        options.append($("<option disabled selected value />").text("-- select a building --"));

                        //add an option to the select for each building
                        result.forEach(function (entry) {
                            options.append($("<option />").attr('id', entry.id).text(entry.text));
                        });
                        options.prop('disabled', false)

                        var venue = $("#venue");
                        venue.prop('disabled', true);
                        venue.children().remove();
                    },
                    error: function (err, result) {
                        alert("Error:" + err.responseText);
                    }
                });
                $("#btnSubmit").prop("disabled", true);
            });

            //remove options and disable selects for time change
            $("#length").change(function () {
                var venue = $("#venue");
                venue.prop('disabled', true);
                venue.children().remove();

                var building = $("#building");
                building.prop('disabled', true);
                building.children().remove();

                var id = $("#campus").children(":selected").attr("id");

                $.ajax({
                    type: 'GET',
                    url: '/Booking/getBuildingsList',
                    data: "id=" + id,
                    success: function (result) {
                        var options = $("#building");

                        //remove existing options from the select to add new options
                        options.children().remove();

                        //add blank option
                        options.append($("<option disabled selected value />").text("-- select a building --"));

                        //add an option to the select for each building
                        result.forEach(function (entry) {
                            options.append($("<option />").attr('id', entry.id).text(entry.text));
                        });
                        options.prop('disabled', false)

                        var venue = $("#venue");
                        venue.prop('disabled', true);
                        venue.children().remove();
                    },
                    error: function (err, result) {
                        alert("Error:" + err.responseText);
                    }
                });
                $("#btnSubmit").prop("disabled", true);
            });

            $("#venue").change(function ()
            {
                $("#btnSubmit").prop("disabled", false);
            });

            $("#btnUpdateBooking").click(function () {

                var model = {person_id : '@Model.person_id', date: $("#datepicker").val(), time: $("#timepicker").val(), length: $("#length").val(), campus: $("#campus").val(), building: $("#building").val(), venue: $("#venue").val(), booking_seq: '@Model.booking_seq', campus_id: $("#campus").children(":selected").attr("id"), venue_id: $("#venue").children(":selected").attr("id"), building_id: $("#building").children(":selected").attr("id")}
                var url  = '@Url.Action("updateBookingDetails","Booking")';

                    $.post(url, model, function () {
                        window.location.href = "/Booking/ViewBookings";
                    })
            });
        });
    </script>
    }