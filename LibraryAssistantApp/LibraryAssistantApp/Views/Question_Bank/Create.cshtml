@model LibraryAssistantApp.Models.Question_Bank

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@if (ViewBag.Duplicate == "Yes")
{
    <div style="text-align:center" class="isa_warning">This question already exists for the selected topic. Please choose another topic or question.</div>
}

<script type="text/javascript">
   function preventBack(){window.history.forward();}
    setTimeout("preventBack()", 0);
    window.onunload=function(){null};
</script>

<h2>Create Question</h2>


@Html.AntiForgeryToken()
@Html.Hidden("NewTopic", (string)ViewBag.NewTopic, new { id = "NewTopic" })
@Html.Hidden("Topic_Name", (string)ViewBag.Topic_Name, new { id = "Topic_Name" })
@Html.Hidden("Topic_Des", (string)ViewBag.Topic_Des, new { id = "Topic_Des" })

<h4 class="bg-info shaded">New Question Details</h4>
<div class="row" style="padding-top:15px">
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <ul style="padding-bottom:15px;">
            <li>
                <p>Type out a new question to be answered in a questionnaire.</p>
            </li>
            <li>
                <p>Select a topic from the drowpdown or create a new topic.</p>
            </li>
        </ul>
        <div class="form-group">
            @Html.LabelFor(model => model.Question_Text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Question_Text, new
           {
               htmlAttributes = new
               {
                   @class = "form-control",
                   id = "Question_TextBox",
                   @Value = (string)ViewBag.Question_Text
               }
           })
                <label class="text-danger" id="Error_Question_Text"></label>

                @*@Html.Label("",new { @class = "text-danger", id = "Error_Question_Text" }))*@
                @*@Html.ValidationMessageFor(model => model.Question_Text, "", new { @class = "text-danger" , id = "Error_Question_Text" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Topic_Seq, "Topic", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @if (ViewBag.NewTopic == "YES")
                {
                    @Html.DropDownList("Topic_Seq", null, "Select a topic", htmlAttributes: new { @class = "form-control", id = "Topic_Dropdownlist", @disabled = "disabled" })
                    <label class="text-danger" id="Error_Topic_Seq"></label>
                    @*@Html.ValidationMessageFor(model => model.Topic_Seq, "", new { @class = "text-danger", id = "Error_Topic_Seq" })*@
                }
                else
                {
                    @Html.DropDownList("Topic_Seq", null, "Select a topic", htmlAttributes: new { @class = "form-control", id = "Topic_Dropdownlist" })
                    <label class="text-danger" id="Error_Topic_Seq"></label>
                    @*@Html.ValidationMessageFor(model => model.Topic_Seq, "", new { @class = "text-danger", id = "Error_Topic_Seq" })*@
                }


            </div>
        </div>

        @if (ViewBag.NewTopic != "YES")
            {
            <div class="form-group">
                <div class="col-md-10 col-md-offset-2">
                    <div class="btn-group">
                        <input data-toggle="tooltip" data-placement="right" title="Create new topic if the topic you require does not exist." type="button" value="New Topic" class="btn btn-primary" onclick="location.href='@Url.Action("Create","Question_Topic")'" />
                    </div>
                </div>
            </div>
        }

    </div>
</div>



@Html.Partial("_Create")


<script>
    function RunURL() {
        var Question_Text = document.getElementById("Question_TextBox").value;
        var Topic_Seq = document.getElementById("Topic_Dropdownlist").value;
        var Style_Type_ID = document.getElementById("Style_Type_ID").value;
        var Topic_Name = document.getElementById("Topic_Name").value;
        var Topic_Des = document.getElementById("Topic_Des").value;
        var NewTopic = document.getElementById("NewTopic").value;
        window.location.href = "/Question_Bank/Creating?Question_Text=" + Question_Text + "&Topic_Seq=" + Topic_Seq + "&Style_Type_ID=" + Style_Type_ID + "&Topic_Name=" + Topic_Name + "&Topic_Des=" + Topic_Des + "&NewTopic=" + NewTopic;
    }
</script>


<script>
    function EnableDropDown() {
        document.getElementById("Topic_Dropdownlist").disabled = false;
    }
</script>

<script>
    function DisableDropDown() {
        document.getElementById("Topic_Dropdownlist").disabled = true;
    }
</script>

<script>
    function validateInput() {

        document.getElementById("Error_Style_Type_ID").innerHTML = "";
        document.getElementById("Error_Question_Text").innerHTML = "";
        document.getElementById("Error_Topic_Seq").innerHTML = "";

        var x = document.getElementById("Style_Type_ID").value;
        var y = document.getElementById("Question_TextBox").value;
        var z = document.getElementById("Topic_Dropdownlist").value;
        var NewTopic = document.getElementById("NewTopic").value;
        if (x == "" && y == "" && z == "") {
            document.getElementById("Error_Style_Type_ID").innerHTML = "Style type required";
            document.getElementById("Error_Question_Text").innerHTML = "Question required";
            document.getElementById("Error_Topic_Seq").innerHTML = "Topic required";
            if (NewTopic == "YES") {
                DisableDropDown();
            }

        }
        else if (x == "" && y == "") {
            document.getElementById("Error_Style_Type_ID").innerHTML = "Style type required";
            document.getElementById("Error_Question_Text").innerHTML = "Question required";
            if (NewTopic == "YES") {
                DisableDropDown();
            }
        }
        else if (y == "" && z == "") {
            document.getElementById("Error_Question_Text").innerHTML = "Question required";
            document.getElementById("Error_Topic_Seq").innerHTML = "Topic required";
            if (NewTopic == "YES") {
                DisableDropDown();
            }
        }
        else if (x == "" && z == "") {
            document.getElementById("Error_Topic_Seq").innerHTML = "Topic required";
            document.getElementById("Error_Style_Type_ID").innerHTML = "Style type required";
            if (NewTopic == "YES") {
                DisableDropDown();
            }
        }
        else if (x == "") {
            document.getElementById("Error_Style_Type_ID").innerHTML = "Style type required";
            if (NewTopic == "YES") {
                DisableDropDown();
            }
        }
        else if (y == "") {
            document.getElementById("Error_Question_Text").innerHTML = "Question required";
            if (NewTopic == "YES") {
                DisableDropDown();
            }
        }
        else if (z == "") {
            document.getElementById("Error_Topic_Seq").innerHTML = "Topic required";
            if (NewTopic == "YES") {
                DisableDropDown();
            }
        }
        else {
            RunURL();
        }
    }
</script>

<style>
    .isa_info, .isa_success, .isa_warning, .isa_error {
        margin: 10px 0px;
        padding: 12px;
        text-align: center;
    }

    .isa_info {
        color: #00529B;
        background-color: #BDE5F8;
        text-align: center;
    }

    .isa_success {
        color: #4F8A10;
        background-color: #DFF2BF;
    }

    .isa_warning {
        color: #9F6000;
        background-color: #FEEFB3;
        text-align: center;
    }

    .isa_error {
        color: #D8000C;
        background-color: #FFBABA;
        text-align: center;
    }

        .isa_info i, .isa_success i, .isa_warning i, .isa_error i {
            margin: 10px 22px;
            font-size: 2em;
            vertical-align: middle;
        }
</style>