@using System.Web.Optimization
@model LibraryAssistantApp.Models.RoleModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Create Role</h3>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.RoleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
                <span class="text-danger">@ViewBag.ErrorMsg</span>
            </div>
        </div>
        <hr />
            <div class="panel panel-default">
                <table class="table table-condensed">
                    <thead>
                        <tr>
                            <th>
                                Action
                            </th>
                            <th>
                                Create<input type="checkbox" class="check-create-a" checked="checked" />
                            </th>
                            <th>
                                Read<input type="checkbox" class="check-read-a" checked="checked" />
                            </th>
                            <th>
                                Update<input type="checkbox" class="check-update-a" checked="checked" />
                            </th>
                            <th>
                                Delete<input type="checkbox" class="check-delete-a" checked="checked" />
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.RoleActions.Count(); i++)
                {
                            @Html.HiddenFor(m => m.RoleActions[i].ActionId)
                            <tr>
                                <td>
                                    @Html.DisplayFor(m => m.RoleActions[i].ActionName)
                                </td>
                                <td>
                                    @Html.CheckBoxFor(m => m.RoleActions[i].CreateInd, htmlAttributes: new { @class = "check-create" })
                                </td>
                                <td>
                                    @Html.CheckBoxFor(m => m.RoleActions[i].ReadInd, htmlAttributes: new { @class = "check-read" })
                                </td>
                                <td>
                                    @Html.CheckBoxFor(m => m.RoleActions[i].UpdateInd, htmlAttributes: new { @class = "check-update" })
                                </td>
                                <td>
                                    @Html.CheckBoxFor(m => m.RoleActions[i].DeleteInd, htmlAttributes: new { @class = "check-delete" })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        <span class="field-validation-error text-danger">@ViewBag.Error</span>
    </div>
    <div class="form-actions no-color">
        <input type="submit" value="Create" class="btn btn-default" /> |
        @Html.ActionLink("Back to List", "Index")
    </div>
}


@Scripts.Render("~/bundles/checkboxjs")