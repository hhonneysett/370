@using System.Web.Optimization
@model LibraryAssistantApp.Models.RoleEditModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Update Role</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="form-group">
                @Html.LabelFor(model => model.role.Role_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.role.Role_Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.role.Role_Name, "", new { @class = "text-danger" })
                    <span class="text-danger">@ViewBag.ErrorMsg</span>
                </div>
            </div>
            <hr/>
            <div class="panel panel-default">
                <table class="table table-condensed">
                    <thead>
                        <tr>
                            <th>
                                Action
                            </th>
                            <th>
                                Create<input type="checkbox" class="check-create-a" checked="checked" />
                            </th>
                            <th>
                                Read<input type="checkbox" class="check-read-a" checked="checked" />
                            </th>
                            <th>
                                Update<input type="checkbox" class="check-update-a" checked="checked" />
                            </th>
                            <th>
                                Delete<input type="checkbox" class="check-delete-a" checked="checked" />
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.actionList.Count(); i++)
                        {
                            <tr>
                                @Html.HiddenFor(m => m.actionList[i].RoleAction_ID)
                                @Html.HiddenFor(m => m.actionList[i].Action_ID)
                                @Html.HiddenFor(m => m.actionList[i].Role_ID)
                                <td>
                                    @Html.DisplayFor(m => m.actionList[i].Action.Action_Name)
                                </td>
                                <td>
                                    @Html.CheckBoxFor(m => m.actionList[i].Create_Ind, htmlAttributes: new { @class = "check-create" })
                                </td>
                                <td>
                                    @Html.CheckBoxFor(m => m.actionList[i].Read_Ind, htmlAttributes: new { @class = "check-read" })
                                </td>
                                <td>
                                    @Html.CheckBoxFor(m => m.actionList[i].Update_Ind, htmlAttributes: new { @class = "check-update" })
                                </td>
                                <td>
                                    @Html.CheckBoxFor(m => m.actionList[i].Delete_Ind, htmlAttributes: new { @class = "check-delete" })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>  
            </div>
        </div>

        <div class="form-group">
            <div class="btn-group">
                @Html.ActionLink("Delete", "Delete", new { id = Model.role.Role_ID }, htmlAttributes: new { @class = "btn btn-default" })
            </div>
            <div class="btn-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@Scripts.Render("~/bundles/checkboxjs")
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
