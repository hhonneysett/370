@using System.Web.Optimization
@model LibraryAssistantApp.Models.RoleEditModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>RoleEditModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.role.Role_Name, htmlAttributes: new { @class ="control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.role.Role_Name, new { htmlAttributes = new { @class="form-control" } })
                @Html.ValidationMessageFor(model => model.role.Role_Name, "", new { @class="text-danger" })
            </div>
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            Action Name
                        </th>
                        <th>
                            Create<input type="checkbox" id="checkCa" />
                        </th>
                        <th>
                            Read<input type="checkbox" id="checkRa" />
                        </th>
                        <th>
                            Update<input type="checkbox" id="checkUa" />
                        </th>
                        <th>
                            Delete<input type="checkbox" id="checkDa" />
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.actionList.Count(); i++)
                    {
                        <tr>
                            @Html.HiddenFor(m => m.actionList[i].RoleAction_ID)
                            @Html.HiddenFor(m => m.actionList[i].Action_ID)
                            @Html.HiddenFor(m => m.actionList[i].Role_ID)
                            <td>
                                @Html.DisplayFor(m => m.actionList[i].Action.Action_Name)
                            </td>
                            <td>
                                @Html.CheckBoxFor(m => m.actionList[i].Create_Ind, htmlAttributes: new { @class = "checkC" })
                            </td>
                            <td>
                                @Html.CheckBoxFor(m => m.actionList[i].Read_Ind, htmlAttributes: new { @class = "checkR" })
                            </td>
                            <td>
                                @Html.CheckBoxFor(m => m.actionList[i].Update_Ind, htmlAttributes: new { @class = "checkU" })
                            </td>
                            <td>
                                @Html.CheckBoxFor(m => m.actionList[i].Delete_Ind, htmlAttributes: new { @class = "checkD" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@Scripts.Render("~/bundles/checkboxjs")

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
