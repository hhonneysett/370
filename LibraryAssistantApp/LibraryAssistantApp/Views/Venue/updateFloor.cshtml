@using LibraryAssistantApp.Models;

@model LibraryAssistantApp.Models.Building_Floor

@{
    var campuses = (IEnumerable<Campus>)ViewBag.Campuses;
    var buildings = (IEnumerable<Building>)ViewBag.Buildings;
}

<form id="updateBuildingFloorForm" name="updateBuildingFloorForm" class="form-group">
    <table>
        <tr>
            <td><b>Campus:</b></td>
            <td style="padding-left:5px; padding-bottom:5px">
                <select id="updateBuildingFloorCampusSelect" class="form-control">
                    @foreach (var campus in campuses)
                    {
                        <option id="@campus.Campus_ID" class="@campus.Campus_ID">@campus.Campus_Name</option>
                    }
                </select>
            </td>
        </tr>
        <tr>
            <td><b>Building:</b></td>
            <td style="padding-left:5px; padding-bottom:5px">
                <select id="updateBuildingFloorBuildingSelect" class="form-control">
                    @foreach (var building in buildings)
                    {
                        <option id="@building.Building_ID" class="@building.Building_ID">@building.Building_Name</option>
                    }
                </select>
            </td>
        </tr>
        <tr>
            <td><b>Building Name:</b></td>
            <td style="padding-left:5px; padding-bottom:5px">@Html.EditorFor(model => model.Floor_Name, new { htmlAttributes = new { @class = "form-control", @id = "floorName" } })</td>
        </tr>
    </table>
</form>
<button class="btn btn-primary" id="btnConfirmBuildingFloorUpdate">Update Building</button>
<button class="btn btn-primary" id="btnCancelModal">Cancel</button>
<hr />

<script src="~/Scripts/jquery.ambiance.js"></script>

<script type="text/javascript">
    //cancel button
    $("#btnCancelModal").click(function () {
        $('#myModal').modal('toggle');
    })

    //set default value of campus select
    var campus = '.' + @Model.Campus_ID;
    $("#updateBuildingFloorCampusSelect " + campus).attr("selected", true);

    var building = '.' + @Model.Building_ID;
    $("#updateBuildingFloorBuildingSelect " + building).attr("selected", true);

    //initiate validation
    $("#updateBuildingFloorForm").validate({
        rules: {
            Floor_Name: {
                required: true,
                maxlength: 30,
                remote: {
                    url: '/Venue/checkUpdateFloor',
                    type: 'get',
                    data: { campus: $("#updateBuildingFloorCampusSelect").children(":selected").attr("id"), building: $("#updateBuildingFloorBuildingSelect").children(":selected").attr("id") }
                }
            }
        },

        messages: {
            Floor_Name: {
                remote: "Building floor already exists"
            }
        },

        errorClass: "my-error-class",
    })

    //show matching buildings
    $("#updateBuildingFloorCampusSelect").change(function () {
        var id = $("#updateBuildingFloorCampusSelect").children(":selected").prop('id');
        $.ajax({
            type: 'GET',
            url: '/Venue/getCamBuildings',
            data: {
                id: id
            },
            success: function (result) {
                var options = $("#updateBuildingFloorBuildingSelect");

                //remove existing options from the select to add new options
                options.children().remove();

                options.append($("<option disabled selected value />").text("-- select building --"));

                if (result.length == 0) {
                    options.children().remove();
                    options.append($("<option disabled selected value />").text("-- no buildings --"));
                } 

                $("#btnConfirmBuildingFloorUpdate").prop('disabled', true);

                //add an option to the select for each building
                result.forEach(function (entry) {
                    options.append($("<option />").text(entry.text).prop('id', entry.id));
                });
                options.prop('disabled', false)
            },
            error: function (err, result) {
                alert("Error in assigning dataToSave" + err.responseText);
            }
        });
    });

    //enable button
    $("#updateBuildingFloorBuildingSelect").change(function () {
        $("#btnConfirmBuildingFloorUpdate").prop('disabled', false);
    })

    //confirm update
    $("#btnConfirmBuildingFloorUpdate").click(function() {
        var check = $("#updateBuildingFloorForm").valid();

        if (check) {

            $('#btnConfirmBuildingFloorUpdate').prop('disabled', true);

            $.ajax({
                type: 'POST',
                url: '/Venue/updateBuildingFloor',
                data: { floorName: $("#floorName").val(), campus: $("#updateBuildingFloorCampusSelect").children(":selected").attr("id"), building: $("#updateBuildingFloorBuildingSelect").children(":selected").attr("id")  },
                success: function (result) {
                    $('#myModal').modal('toggle');

                    $("#buildingFloorTable tbody").empty();

                    if( !$.isArray(result) ||  !result.length ) {
                        $("#buildingFloorTable tbody").empty();
                        $("#buildingFloorTable thead").append('<tr><th>No Matching Building Floors</th></tr>')
                    } else {
                        result.forEach(function (entry) {
                            $('#buildingFloorTable tbody').append('<tr id="' + entry.id + '"><td>' + entry.name + '</td></tr>');
                        });
                    }

                    //disable buttons
                    $("#btnUpdateBuildingFloor").prop('disabled', true);
                    $("#btnDeleteBuildingFloor").prop('disabled', true);
                    $("#btnViewVenues").prop('disabled', true)

                    $.ambiance({
                        message: "Building Floor Successfully Updated!",
                        title: "Success!",
                        type: "success",
                        timeout: 5
                    });

                    //hide further divs
                    $("#venues").hide(800);
                },
                error: function (err, result) {
                    alert("Error in assigning dataToSave" + err.responseText);
                }
            });
        }
    })
</script>
