@model LibraryAssistantApp.Models.Campus

<form id="updateCampusForm" name="updateCampusForm" class="form-group">
    <label class="control-label">Campus Name:</label>
    @Html.EditorFor(model => model.Campus_Name, new { htmlAttributes = new { @class = "form-control", @id = "campusName" } })
</form>
<button class="btn btn-default" id="btnConfirmUpdate">Update Campus</button>
<button class="btn btn-default" id="btnCancelModal">Cancel</button>
<hr />

<script src="~/Scripts/jquery.ambiance.js"></script>

<script type="text/javascript">

    //cancel button
    $("#btnCancelModal").click(function () {
        $('#myModal').modal('toggle');
    })

    //add lettersonly method
    jQuery.validator.addMethod("lettersonly", function (value, element) {
        return this.optional(element) || /^[a-z]+$/i.test(value);
    }, "Letters only please");

    //start form validation
    $("#updateCampusForm").validate({
        rules: {
            Campus_Name: {
                required: true,
                lettersonly: true,
                remote: {
                    url: "/Venue/checkUpdateCampus",
                    type: "get"
                }
            }
        },

        messages: {
            Campus_Name: {
                remote: "Campus already exists"
            }
        },

        errorClass: "my-error-class",
    })

    $("#btnConfirmUpdate").click(function () {
        $.ajax({
            type: 'POST',
            url: '/Venue/captureUpdateCampus',
            data: { campusName: $("#campusName").val() },
            success: function (result) {
                $('#myModal').modal('toggle');

                $("#campusTable tbody").empty();

                if (!$.isArray(result) || !result.length) {
                    $("#campusTable tbody").empty();
                    $("#campusTable thead").append('<tr><th>No Campuses</th></tr>')
                } else {
                    result.forEach(function (entry) {
                        $('#campusTable tbody').append('<tr id="' + entry.id + '"><td>' + entry.name + '</td></tr>');
                    });
                }

                $.ambiance({
                    message: "Campus Successfully Updated!",
                    title: "Success!",
                    type: "success",
                    timeout: 5
                });

                //disable buttons
                $("#btnUpdateCampus").prop('disabled', true);
                $("#btnDeleteCampus").prop('disabled', true);
                $("#btnViewBuildings").prop('disabled', true)
            },
            error: function (err, result) {
                alert("Error in assigning dataToSave" + err.responseText);
            }
        });
    })

</script>