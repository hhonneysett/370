@using LibraryAssistantApp.Models;

@model LibraryAssistantApp.Models.Venue

@{
    var campuses = (IEnumerable<Campus>)ViewBag.Campuses;
    var buildings = (IEnumerable<Building>)ViewBag.Buildings;
    var floors = (IEnumerable<Building_Floor>)ViewBag.Floors;
    var types = (IEnumerable<Venue_Type>)ViewBag.Types;
    var characteristics = (List<checkedCharacteristics>)ViewBag.Characteristics;
    var currentType = (string)ViewBag.CurrentType;
}

<form id="updateVenueForm" name="updateVenueForm" class="form-group">
    <table>
        <tr>
            <td><b>Campus:</b></td>
            <td style="padding-left:5px; padding-bottom:5px">
                <select id="updateVenueCampusSelect" class="form-control">
                    @foreach (var campus in campuses)
                    {
                        <option id="@campus.Campus_ID" class="@campus.Campus_ID">@campus.Campus_Name</option>
                    }
                </select>
            </td>
        </tr>
        <tr>
            <td><b>Building:</b></td>
            <td style="padding-left:5px; padding-bottom:5px">
                <select id="updateVenueBuildingSelect" class="form-control">
                    @foreach (var building in buildings)
                    {
                        <option id="@building.Building_ID" class="@building.Building_ID">@building.Building_Name</option>
                    }
                </select>
            </td>
        </tr>
        <tr>
            <td><b>Floor:</b></td>
            <td style="padding-left:5px; padding-bottom:5px">
                <select id="updateVenueFloorSelect" class="form-control">
                    @foreach (var floor in floors)
                    {
                        <option id="@floor.Building_Floor_ID" class="@floor.Building_Floor_ID">@floor.Floor_Name</option>
                    }
                </select>
            </td>
        </tr>
        <tr>
            <td><b>Type:</b></td>
            <td style="padding-left:5px; padding-bottom:5px">
                <select id="updateVenueTypeSelect" class="form-control">
                    @foreach (var type in types)
                    {
                        <option id="@type.Venue_Type1" class="@type.Venue_Type1">@type.Venue_Type1</option>
                    }
                </select>
            </td>
        </tr>
        <tr>
            <td><b>Venue Name:</b></td>
            <td style="padding-left:5px; padding-bottom:5px"><input type="text" required id="venueName" name="venueName" value="@Model.Venue_Name" class="form-control"/></td>
        </tr>
        <tr>
            <td><b>Capacity:</b></td>
            <td style="padding-left:5px"><input type="number" min="1" max="1000" name="venueCapacity" required id="venueCapacity" value="@Model.Capacity" class="form-control"/></td>
        </tr>
    </table>
</form>

<div class="form-group">

    <label class="control-label">Venue Characteristics:</label>

    @foreach (checkedCharacteristics characteristic in characteristics)
    {
        <div class="checkbox">
            <label><input type="checkbox" value="@characteristic.characteristic.Characteristic_ID" class="Characteristic_ID" checked="@characteristic.has"/>@characteristic.characteristic.Characteristic_Name</label>
        </div>
    }
</div>

<button class="btn btn-default" id="btnConfirmVenueUpdate">Update Building</button>
<button class="btn btn-default" id="btnCancelModal">Cancel</button>
<hr />

<script type="text/javascript">
    //cancel button
    $("#btnCancelModal").click(function () {
        $('#myModal').modal('toggle');
    })

    //set default value of campus select
    var campus = '.' + @Model.Campus_ID;
    $("#updateVenueCampusSelect " + campus).attr("selected", true);

    var building = '.' + @Model.Building_ID;
    $("#updateVenueBuildingSelect " + building).attr("selected", true);

    var floor = '.' + @Model.Building_Floor_ID;
    $("#updateVenueFloorSelect " + floor).attr("selected", true);

    var type = '.' + "@Html.Raw(Model.Venue_Type)";
    $("#updateVenueTypeSelect " + type).attr("selected", true);

    //initiate validation
    $("#updateVenueForm").validate({
        errorClass: "my-error-class",
    })

    //confirm update
    $("#btnConfirmVenueUpdate").click(function() {
        var check = $("#updateVenueForm").valid();

        //disable button on add click
        $("#btnConfirmVenueUpdate").prop('disabled', true);

        //get characteristics
        var characteristicsList = [];

        $('input:checkbox.Characteristic_ID').each(function () {
            var sThisVal = (this.checked ? $(this).val() : "");
            if (sThisVal > 0) {
                characteristicsList.push(sThisVal);
            };
        });

        if (check)
        {
            $.ajax({
                type: 'POST',
                url: '/Venue/updateVenue',
                data: {
                    venueName: $("#venueName").val(),
                    characteristics: JSON.stringify(characteristicsList),
                    type: $("#updateVenueTypeSelect").children(":selected").prop('id'),
                    venuecapacity: $("#venueCapacity").val(),
                    campus: $("#updateVenueCampusSelect").children(":selected").prop('id'),
                    building: $("#updateVenueBuildingSelect").children(":selected").prop('id'),
                    floor: $("#updateVenueFloorSelect").children(":selected").prop('id')
                },
                success: function (result) {

                    $('#myModal').modal('toggle');

                    $("#venueTable tbody").empty();
                    $("#venueTable thead").empty();                  

                    if( !$.isArray(result) ||  !result.length ) {
                        $("#venueTable tbody").empty();
                        $("#venueTable thead").append('<tr><th>No Matching Venues</th></tr>')
                    } else {
                        $("#venueTable thead").append('<tr><th>Venue Name</th><th>Type</th><th>Capacity</th></tr>');
                        result.forEach(function (entry) {
                            $('#venueTable tbody').append('<tr id="' + entry.id + '"><td>' + entry.name + '</td><td>' + entry.vtype + '</td><td>' + entry.vcapacity + '</tr>');
                        });
                    }

                    $.ambiance({
                        message: "Venue Successfully Updated!",
                        title: "Success!",
                        type: "success",
                        timeout: 5
                    });
                },
                error: function (err, result) {
                    alert("Error in assigning dataToSave" + err.responseText);
                }
            });
        }

    })

    //show matching buildings
    $("#updateVenueCampusSelect").change(function () {
        var id = $("#updateVenueCampusSelect").children(":selected").prop('id');
        $.ajax({
            type: 'GET',
            url: '/Venue/getCamBuildings',
            data: {
                id: id
            },
            success: function (result) {
                var options = $("#updateVenueBuildingSelect");

                //remove existing options from the select to add new options
                options.children().remove();
                $("#updateVenueFloorSelect").children().remove();
                $("#updateVenueFloorSelect").prop('disabled', true);

                options.append($("<option disabled selected value />").text("-- select building --"));

                if (result.length == 0) {
                    options.children().remove();
                    options.append($("<option disabled selected value />").text("-- no buildings --"));
                } 

                $("#btnConfirmVenueUpdate").prop('disabled', true);

                //add an option to the select for each building
                result.forEach(function (entry) {
                    options.append($("<option />").text(entry.text).prop('id', entry.id));
                });
                options.prop('disabled', false)
            },
            error: function (err, result) {
                alert("Error in assigning dataToSave" + err.responseText);
            }
        });
    });

    //show matching floors
    $("#updateVenueBuildingSelect").change(function () {
        var id = $("#updateVenueBuildingSelect").children(":selected").prop('id');
        $.ajax({
            type: 'GET',
            url: '/Venue/getBuildFloors',
            data: {
                id: id
            },
            success: function (result) {
                var options = $("#updateVenueFloorSelect");

                //remove existing options from the select to add new options
                options.children().remove();                             

                options.append($("<option disabled selected value />").text("-- select building --"));

                if (result.length == 0) {
                    options.children().remove();
                    options.append($("<option disabled selected value />").text("-- no buildings --"));
                } 

                //add an option to the select for each building
                result.forEach(function (entry) {
                    options.append($("<option />").text(entry.text).prop('id', entry.id));
                });
                options.prop('disabled', false)
            },
            error: function (err, result) {
                alert("Error in assigning dataToSave" + err.responseText);
            }
        });
    });

    //enable button
    $("#updateVenueFloorSelect").change(function() {
        $("#btnConfirmVenueUpdate").prop('disabled', false);
    })

</script>