@model LibraryAssistantApp.Models.CreatePersonModel

@{
    ViewBag.Title = "RegisterStudent";
    Layout = "~/Views/Shared/_LayoutBlank.cshtml";
}

<h2>User Registration - Welcome!</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "registerStudentForm" }))
{
    @Html.AntiForgeryToken()
    
    <div class="row">
        <div class="col-md-6">
            <h4 class="bg-info shaded">
                User Details
            </h4>
        </div>
        <div class="col-md-12">
            <div class="col-md-offset-1">
                <p class="text-muted"><strong>Please enter your username for example:</strong></p>
                <p class="text-muted">u01234567 or p12345678</p>
            </div>
            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Person_ID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Person_ID, new { htmlAttributes = new { @class = "form-control", @title="Enter your username." } })
                        @Html.ValidationMessageFor(model => model.Person_ID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Person_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Person_Name, new { htmlAttributes = new { @class = "form-control", @title="Name must be alphabetic, can contain whitespace." } })
                        @Html.ValidationMessageFor(model => model.Person_Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Person_Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Person_Surname, new { htmlAttributes = new { @class = "form-control", @title="Surname must be alphabetic, can contain whitespace." } })
                        @Html.ValidationMessageFor(model => model.Person_Surname, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Person_Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Person_Email, new { htmlAttributes = new { @class = "form-control", @title="Enter your email address." } })
                        @Html.ValidationMessageFor(model => model.Person_Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Person_Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Person_Password, new { htmlAttributes = new { @class = "form-control", @title="Enter your password, minimum length: 5 characters." } })
                        @Html.ValidationMessageFor(model => model.Person_Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Confirm_Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Confirm_Password, new { htmlAttributes = new { @class = "form-control", @title="Please re-enter your password." } })
                        @Html.ValidationMessageFor(model => model.Confirm_Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Submit" class="btn btn-success btn-block" title="Submit to confirm registration." />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

